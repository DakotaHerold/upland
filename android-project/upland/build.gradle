apply plugin: 'com.android.application'

android {
    defaultConfig {
        namespace "com.honeybunch.upland"
        minSdkVersion 28
        compileSdk 34
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
    }
    flavorDimensions = ["abi"]
    productFlavors {
        arm64 {
            dimension "abi"
            //noinspection ChromeOsAbiSupport
            ndk.abiFilters 'arm64-v8a'
            externalNativeBuild {
                cmake {
                    arguments "-DTB_SOURCE_PATH=../toybox", "-DCMAKE_TOOLCHAIN_FILE=$System.env.VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake", "-DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$System.env.ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake", "-DVCPKG_TARGET_TRIPLET=arm64-android", "-DPROFILE_TRACE=OFF", "-DFINAL=OFF", "-DANDROID_PLATFORM=android-28", "-DANDROID_STL=c++_static"
                }
            }
        }
        x86_64 {
            dimension "abi"
            //noinspection ChromeOsAbiSupport
            ndk.abiFilters 'x86_64'
            externalNativeBuild {
                cmake {
                    arguments "-DTB_SOURCE_PATH=../toybox", "-DCMAKE_TOOLCHAIN_FILE=$System.env.VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake", "-DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$System.env.ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake", "-DVCPKG_TARGET_TRIPLET=x64-android", "-DPROFILE_TRACE=OFF", "-DFINAL=OFF", "-DANDROID_PLATFORM=android-28", "-DANDROID_STL=c++_static"
                }
            }
        }
    }
    buildTypes {
        debug {
            sourceSets.main {
                assets.srcDir "output/Debug/1jy52o3h/arm64-v8a/Debug/assets"
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            sourceSets.main {
                assets.srcDir "output/Debug/1jy52o3h/arm64-v8a/Release/assets"
            }
        }
    }
    lint {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    ndkVersion '26.2.11394342'

    applicationVariants.configureEach { variant ->
        tasks.named("merge${variant.name.capitalize()}Assets") {
            dependsOn("externalNativeBuild${variant.getName().capitalize()}")
        }
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets.main {
            jniLibs.srcDir 'libs'
        }
        externalNativeBuild {
            cmake {
                buildStagingDirectory "output"
                path '../../CMakeLists.txt'
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['SDL3.jar'], dir: "$System.env.VCPKG_ROOT/packages/sdl3_arm64-android/share/java/SDL3")
}